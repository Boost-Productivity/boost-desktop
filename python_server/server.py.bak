from flask import Flask, jsonify, request
import sys
import logging

# Set up logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

app = Flask(__name__)

# Store data in memory (you could connect to a database here instead)
data_store = {}

@app.route('/api/health', methods=['GET'])
def health_check():
    return jsonify({"status": "running"})

@app.route('/api/data', methods=['GET'])
def get_data():
    return jsonify(data_store)

@app.route('/api/data', methods=['POST'])
def add_data():
    new_data = request.json
    key = new_data.get('key')
    if key:
        data_store[key] = new_data
        return jsonify({"success": True, "message": f"Data with key {key} added"})
    return jsonify({"success": False, "message": "Key is required"}), 400

@app.route('/api/data/<key>', methods=['DELETE'])
def delete_data(key):
    if key in data_store:
        del data_store[key]
        return jsonify({"success": True, "message": f"Data with key {key} deleted"})
    return jsonify({"success": False, "message": f"Key {key} not found"}), 404

if __name__ == '__main__':
    # Get port from command line arguments or use default
    port = int(sys.argv[1]) if len(sys.argv) > 1 else 5000
    
    # Log startup
    logging.info(f"Starting Python server on port {port}")
    
    # Run the Flask app
    app.run(host='127.0.0.1', port=port, debug=False) 